{
  "defaultLanguage": "en",
  "devS3Path": "https:\/\/s3-eu-west-1.amazonaws.com\/airlockdev\/DEVAUTH1\/",
  "devServer": "https:\/\/s3-eu-west-1.amazonaws.com\/airlockdev\/DEMO1\/",
  "javascriptUtilities": "\nfunction calcDistance(coords1, coords2) {\n\tfunction toRad(x) { return x * Math.PI \/ 180; };\n\n\tvar lon1 = coords1[0]; var lat1 = coords1[1];\n\tvar lon2 = coords2[0]; var lat2 = coords2[1];\n\tvar x1 = lat2 - lat1; var dLat = toRad(x1);\n\tvar x2 = lon2 - lon1; var dLon = toRad(x2);\n\tvar a = Math.sin(dLat \/ 2) * Math.sin(dLat \/ 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon \/ 2) * Math.sin(dLon \/ 2);\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\tvar d = 6371 * c; \/\/ earth radius in km\n\n\treturn (isMetric() ? d : d \/ 1.60934);\n\n};\n\n\nfunction getLengthUnit(){\n\treturn context.userPreferences.unitsOfMeasure == \"imperial\"?\"IN\":\"CM\"\n}\n\nfunction getVelocityUnit(){\n    return context.userPreferences.unitsOfMeasure == \"metric\"?\"KMH\":\"MPH\"\n}\n\nfunction getTempratureUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"F\":\"C\"\n}\n\nfunction getPressureUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"IN\":\"MB\"\n}\n\nfunction getDistanceShortUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"FT\":\"M\"\n}\n\nfunction getDistanceUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"MI\":\"KM\"\n}\n\n\nfunction isMetric() {\n\tcontext.userPreferences.unitsOfMeasure == \"metric\";\n};\nfunction isCelsius() {\n\treturn (context.userPreferences.unitsOfMeasure == \"metric\" || context.userPreferences.unitsOfMeasure == \"hybrid\");\n};\nfunction isKMH() {\n\treturn context.userPreferences.unitsOfMeasure == \"metric\";\n};\n\nfunction inMiles(distance)\n{\n\treturn (isMetric() ? distance * 1.60934 : distance);\n};\nfunction inFahrenheit(degrees)\n{\n\treturn (isCelsius() ? (degrees - 32) \/ 1.8 : degrees);\n};\nfunction inMPH(speed)\n{\n\treturn (isKMH() ? speed * 1.60934 : speed);\n};\nfunction inInches(span)\n{\n\treturn ((context.userPreferences.unitsOfMeasure == \"metric\" || context.userPreferences.unitsOfMeasure == \"hybrid\") ? span * 2.54 : span); \/\/ to cm\n};\n\nfunction toDate(dateString)\n{\n\treturn new Date(dateString);\n};\n\nfunction translate(stringId)\n{\n\tvar stringValue = translations[stringId];\n\tif (stringValue === undefined) {\n\t\tthrow \"missing translation id: \" + stringId;\n\t}\n\n\tif (_validate_translation_)\n\t{\n\t\tvar regex = \/\\[\\[\\[(\\d+)\\]\\]\\]\/g;\n\t\tvar placeholders = [];\n\t\tvar match;\n\t\twhile (match = regex.exec(stringValue)) {\n\t\t\tplaceholders.push(match[1]);\n\t\t}\n\n\t\tfor (var n = 0; n < placeholders.length; ++n) {\n\t\t\tif (placeholders[n] < 1 || placeholders[n] >= arguments.length) {\n\t\t\t\tthrow \"translation id: \" + stringId + \" has unmatched placeholder \" + placeholders[n];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 1; i < arguments.length; ++i) {\n\t\tstringValue = stringValue.replace( \"[[[\" + i + \"]]]\", arguments[i]);\n\t}\n\n\treturn stringValue;\n};\n\nfunction deepFreeze(obj)\n{\n\tObject.freeze(obj);\n\tObject.getOwnPropertyNames(obj).forEach(function (prop)\t{\n\t\tif (obj.hasOwnProperty(prop) && obj[prop] !== null\n\t\t&& (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n\t\t&& !Object.isFrozen(obj[prop])) {\n\t\t\tdeepFreeze(obj[prop]);\n\t\t}\n\t});\n\treturn obj;\n};\n\n\nfunction getHours(date){\n\treturn parseInt(date.substring(11,13));\n}\n\nfunction getMinutes(date){\n\treturn parseInt(date.substring(14,16));\n}\n\nfunction getTimeStr(date){\n  return date.substring(11,16);\n  }\n\n\nfunction formatAMPM(d) {\n  var hours = getHours(d);\n  var minutes = getMinutes(d);\n  if (context.userPreferences.is24HourFormat){\n  return getTimeStr(d);\n }\n  var ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12; \/\/ the hour '0' should be '12'\n  minutes = minutes < 10 ? '0'+minutes : minutes;\n  var strTime = hours + ':' + minutes + ' ' + ampm;\n  return strTime;\n};\n\n\n\nfunction compareTime (d, str) {\n  var hours = getHours(d);\n  var minutes = getMinutes(d);\n  var target = str.split(\":\");\n  \n  var small = 1;\n  if  (hours < target[0]) {small = 1 }\n  else if (minutes < target[1]){small = 1}\n  else {small= -1};\n  \n  return small;\n};\n",
  "productId": "d9ba624f-6e9e-4867-abf9-075c0b398fe3",
  "productName": "iOS Flagship App",
  "root": {
    "features": [
      {
        "defaultConfiguration": "{}",
        "features": [
          
        ],
        "noCachedResults": true,
        "defaultIfAirlockSystemIsDown": true,
        "type": "FEATURE",
        "uniqueId": "724fa20b-4817-4d4e-a2e6-99783c5ea337",
        "name": "Multi Location Home Screen",
        "namespace": "ns1"
      },
      {
        "defaultConfiguration": "{}",
        "features": [
          
        ],
        "noCachedResults": true,
        "defaultIfAirlockSystemIsDown": false,
        "type": "FEATURE",
        "uniqueId": "724fa20b-4817-4d4e-a2e6-99783c5ea338",
        "name": "Video HighRes",
        "namespace": "ns1"
      },
      {
        "defaultConfiguration": "{}",
        "features": [
          
        ],
        "noCachedResults": true,
        "defaultIfAirlockSystemIsDown": true,
        "type": "FEATURE",
        "uniqueId": "724fa20b-4817-4d4e-a2e6-99783c5ea339",
        "name": "Video",
        "namespace": "ns1"
      },
      {
        "defaultConfiguration": "{}",
        "features": [
          
        ],
        "noCachedResults": true,
        "defaultIfAirlockSystemIsDown": false,
        "uniqueId": "724fa20b-4817-4d4e-a2e6-99783c5ea310",
        "name": "Video NextGen",
        "namespace": "ns1"
      },
      {
        "defaultConfiguration": "{}",
        "features": [
          
        ],
        "noCachedResults": true,
        "defaultIfAirlockSystemIsDown": true,
        "uniqueId": "724fa20b-4817-4d4e-a2e6-99783c5ea311",
        "name": "My Test Features One",
        "namespace": "ns1"
      },
      {
        "defaultConfiguration": "{}",
        "features": [
          
        ],
        "noCachedResults": true,
        "defaultIfAirlockSystemIsDown": true,
        "uniqueId": "724fa20b-4817-4d4e-a2e6-99783c5ea312",
        "type": "FEATURE",
        "name": "Feature name with text in another language русский",
        "namespace": "ns1"
      },
      {
        "defaultConfiguration": "{}",
        "features": [
          
        ],
        "noCachedResults": true,
        "defaultIfAirlockSystemIsDown": true,
        "uniqueId": "724fa20b-4817-4d4e-a2e6-99783c5ea313",
        "type": "FEATURE",
        "name": "_- MY fancy feature -_",
        "namespace": "ns1"
      }
    ],
    "type": "ROOT",
    "uniqueId": "f591002c-44be-4969-814c-dde3c41ebe3c"
  },
  "s3Path": "https:\/\/s3-eu-west-1.amazonaws.com\/airlockdev\/DEVAUTH1\/",
  "seasonId": "17e45495-ab48-422f-b770-3b3f8e9b4ad1",
  "stageServer": "https:\/\/s3-eu-west-1.amazonaws.com\/airlockdev\/STAGE\/",
  "supportedLanguages": [
    "en"
  ],
  "version": "V2"
}