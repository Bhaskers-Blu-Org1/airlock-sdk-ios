{
	"defaultLanguage": "en",
	"devS3Path": "https:\/\/s3-eu-west-1.amazonaws.com\/airlockdev\/TEST2\/",
	"javascriptUtilities": "\nfunction calcDistance(coords1, coords2) {\n\tfunction toRad(x) { return x * Math.PI \/ 180; };\n\n\tvar lon1 = coords1[0]; var lat1 = coords1[1];\n\tvar lon2 = coords2[0]; var lat2 = coords2[1];\n\tvar x1 = lat2 - lat1; var dLat = toRad(x1);\n\tvar x2 = lon2 - lon1; var dLon = toRad(x2);\n\tvar a = Math.sin(dLat \/ 2) * Math.sin(dLat \/ 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon \/ 2) * Math.sin(dLon \/ 2);\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\tvar d = 6371 * c; \/\/ earth radius in km\n\n\treturn (isMetric() ? d : d \/ 1.60934);\n};\n\nfunction getLengthUnit(){\n\treturn context.userPreferences.unitsOfMeasure == \"imperial\"?\"IN\":\"CM\";\n}\n\nfunction getVelocityUnit(){\n    return context.userPreferences.unitsOfMeasure == \"metric\"?\"KMH\":\"MPH\";\n}\n\nfunction getTempratureUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"F\":\"C\";\n}\n\nfunction getPressureUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"IN\":\"MB\";\n}\n\nfunction getDistanceShortUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"FT\":\"M\";\n}\n\nfunction getDistanceUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"MI\":\"KM\";\n}\n\nfunction isMetric() {\n\tcontext.userPreferences.unitsOfMeasure == \"metric\";\n};\n\nfunction isCelsius() {\n\treturn (context.userPreferences.unitsOfMeasure == \"metric\" || context.userPreferences.unitsOfMeasure == \"hybrid\");\n};\n\nfunction isKMH() {\n\treturn context.userPreferences.unitsOfMeasure == \"metric\";\n};\n\nfunction inMiles(distance)\n{\n\treturn (isMetric() ? distance * 1.60934 : distance);\n};\n\nfunction inFahrenheit(degrees)\n{\n\treturn (isCelsius() ? (degrees - 32) \/ 1.8 : degrees);\n};\n\nfunction inMPH(speed)\n{\n\treturn (isKMH() ? speed * 1.60934 : speed);\n};\n\nfunction inInches(span)\n{\n\treturn ((context.userPreferences.unitsOfMeasure == \"metric\" || context.userPreferences.unitsOfMeasure == \"hybrid\") ? span * 2.54 : span); \/\/ to cm\n};\n\nfunction toDate(dateString)\n{\n\treturn new Date(dateString);\n};\n\nfunction translate(stringId)\n{\n\tvar stringValue = translations[stringId];\n\tif (stringValue === undefined) {\n\t\tthrow \"missing translation id: \" + stringId;\n\t}\n\n\tif (_validate_translation_)\n\t{\n\t\tvar regex = \/\\[\\[\\[(\\d+)\\]\\]\\]\/g;\n\t\tvar placeholders = [];\n\t\tvar match;\n\t\twhile (match = regex.exec(stringValue)) {\n\t\t\tplaceholders.push(match[1]);\n\t\t}\n\n\t\tfor (var n = 0; n < placeholders.length; ++n) {\n\t\t\tif (placeholders[n] < 1 || placeholders[n] >= arguments.length) {\n\t\t\t\tthrow \"translation id: \" + stringId + \" has unmatched placeholder \" + placeholders[n];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 1; i < arguments.length; ++i) {\n\t\tstringValue = stringValue.replace( \"[[[\" + i + \"]]]\", arguments[i]);\n\t}\n\treturn stringValue;\n};\n\nfunction deepFreeze(obj)\n{\n\tObject.freeze(obj);\n\tObject.getOwnPropertyNames(obj).forEach(function (prop)\t{\n\t\tif (obj.hasOwnProperty(prop) && obj[prop] !== null\n\t\t&& (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n\t\t&& !Object.isFrozen(obj[prop])) {\n\t\t\tdeepFreeze(obj[prop]);\n\t\t}\n\t});\n\treturn obj;\n};\n\nfunction getHours(date){\n\treturn parseInt(date.substring(11,13));\n}\n\nfunction getMinutes(date){\n\treturn parseInt(date.substring(14,16));\n}\n\nfunction getTimeStr(date){\n\treturn date.substring(11,16);\n}\n\nfunction formatAMPM(d) {\n\t\n\tif (context.userPreferences.is24HourFormat){\n\t\treturn getTimeStr(d);\n\t}\n\tvar hours = getHours(d); \n\tvar minutes = getMinutes(d); \n\tvar ampm = hours >= 12 ? 'PM' : 'AM'; \n\thours = hours % 12; hours = hours ? hours : 12; \/\/ the hour '0' should be '12' \n\tminutes = minutes < 10 ? '0'+minutes : minutes; \n\tvar strTime = hours + ':' + minutes + ' ' + ampm; \n\treturn strTime; \n};\n\nfunction compareTime (d, str) {\n  var hours = getHours(d);\n  var minutes = getMinutes(d);\n  var target = str.split(\":\");\n  \n  var small = 0;\n  if  (hours < target[0]) {small = 1 }\n  else if (minutes < target[1]){small = 1}\n  else {small= -1};\n  \n  return small;\n};\n",
	"productId": "6b4baadc-92e2-4cb0-aebc-314d06bea98d",
	"productName": "ConfigurationNoRules",
	"root": {
		"features": [
			{
				"defaultConfiguration": "{\n\t\"color\":\"red\",\n\t\"size\":2,\n\t\"alert\":false,\n\t\"background\":\"white\",\n\t\"icon\":\"a.jpg\",\n\t\"text\":\"welcome to hell\"\n}",
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "OnlyDefault",
				"namespace": "CNR",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "e699d69f-00c6-4fc5-bde6-fcd3348215c7"
			},
			{
				"defaultConfiguration": "{\"title\":\"Example Schema\",\"type\":\"object\",\"properties\":{\"color\":{\"type\":\"string\"},\"size\":{\"description\":\"Text size\",\"type\":\"integer\",\"minimum\":1},\"alert\":{\"type\":\"boolean\"},\"background\":{\"type\":\"string\"},\"icon\":{\"type\":\"string\"},\"text\":{\"type\":\"string\"}},\"required\":[\"color\",\"text\"]}",
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "ConfigCompleteOverwrite",
				"namespace": "CNR",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "c6235949-f6ec-42e0-8a81-e6c8848896f7"
			},
			{
				"defaultConfiguration": "{\"color\":\"red\",\"size\":2,\"alert\":false,\"background\":\"white\",\"icon\":\"a.jpg\",\"text\":\"welcome to hell\"}",
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "ConfigOverwriteOneParam",
				"namespace": "CNR",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "29cd4b5d-cb19-4be6-bb63-443e8633dfb4"
			},
			{
				"defaultConfiguration": "{\"color\":\"red\",\"size\":2,\"alert\":false,\"background\":\"white\",\"icon\":\"a.jpg\",\"text\":\"welcome to hell\"}",
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "ConfigOverwrite2Params",
				"namespace": "CNR",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "c6913d22-82b1-457a-b0e7-07bf0387c53e"
			},
			{
				"defaultConfiguration": "{\"color\":\"red\",\"size\":2,\"alert\":false,\"background\":\"white\",\"icon\":\"a.jpg\",\"text\":\"welcome to hell\"}",
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "ConfigOverwrite2Params2",
				"namespace": "CNR",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "044b2084-d692-4c95-8b9f-3adadf55fb73"
			},
			{
				"defaultConfiguration": "{\"color\":\"red\",\"size\":2,\"alert\":false,\"background\":\"white\",\"icon\":\"a.jpg\",\"text\":\"welcome to hell\"}",
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "ConfigOverwriteLastParam",
				"namespace": "CNR",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "3b870acf-be55-4197-93cb-f8d82f8ace29"
			}
		],
		"type": "ROOT",
		"uniqueId": "073e98ba-7eee-4beb-ac7b-8fee1cc77045"
	},
	"s3Path": "https:\/\/airlockdev.s3-eu-west-1.amazonaws.com\/TEST2",
	"seasonId": "7bbab47c-e39e-4378-bd4d-31e2079ad212",
	"supportedLanguages": [
		"en"
	],
	"version": "V2"
}