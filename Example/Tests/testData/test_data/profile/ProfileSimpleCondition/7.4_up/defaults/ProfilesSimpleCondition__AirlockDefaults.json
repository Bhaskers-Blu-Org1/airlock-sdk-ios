{
	"defaultLanguage": "en",
	"devS3Path": "https:\/\/s3-eu-west-1.amazonaws.com\/airlockdev\/TEST2\/",
	"javascriptUtilities": "\nfunction calcDistance(coords1, coords2) {\n\tfunction toRad(x) { return x * Math.PI \/ 180; };\n\n\tvar lon1 = coords1[0]; var lat1 = coords1[1];\n\tvar lon2 = coords2[0]; var lat2 = coords2[1];\n\tvar x1 = lat2 - lat1; var dLat = toRad(x1);\n\tvar x2 = lon2 - lon1; var dLon = toRad(x2);\n\tvar a = Math.sin(dLat \/ 2) * Math.sin(dLat \/ 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon \/ 2) * Math.sin(dLon \/ 2);\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\tvar d = 6371 * c; \/\/ earth radius in km\n\n\treturn (isMetric() ? d : d \/ 1.60934);\n};\n\nfunction getLengthUnit(){\n\treturn context.userPreferences.unitsOfMeasure == \"imperial\"?\"IN\":\"CM\";\n}\n\nfunction getVelocityUnit(){\n    return context.userPreferences.unitsOfMeasure == \"metric\"?\"KMH\":\"MPH\";\n}\n\nfunction getTempratureUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"F\":\"C\";\n}\n\nfunction getPressureUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"IN\":\"MB\";\n}\n\nfunction getDistanceShortUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"FT\":\"M\";\n}\n\nfunction getDistanceUnit(){\n    return context.userPreferences.unitsOfMeasure == \"imperial\"?\"MI\":\"KM\";\n}\n\nfunction isMetric() {\n\tcontext.userPreferences.unitsOfMeasure == \"metric\";\n};\n\nfunction isCelsius() {\n\treturn (context.userPreferences.unitsOfMeasure == \"metric\" || context.userPreferences.unitsOfMeasure == \"hybrid\");\n};\n\nfunction isKMH() {\n\treturn context.userPreferences.unitsOfMeasure == \"metric\";\n};\n\nfunction inMiles(distance)\n{\n\treturn (isMetric() ? distance * 1.60934 : distance);\n};\n\nfunction inFahrenheit(degrees)\n{\n\treturn (isCelsius() ? (degrees - 32) \/ 1.8 : degrees);\n};\n\nfunction inMPH(speed)\n{\n\treturn (isKMH() ? speed * 1.60934 : speed);\n};\n\nfunction inInches(span)\n{\n\treturn ((context.userPreferences.unitsOfMeasure == \"metric\" || context.userPreferences.unitsOfMeasure == \"hybrid\") ? span * 2.54 : span); \/\/ to cm\n};\n\nfunction toDate(dateString)\n{\n\treturn new Date(dateString);\n};\n\nfunction translate(stringId)\n{\n\tvar stringValue = translations[stringId];\n\tif (stringValue === undefined) {\n\t\tthrow \"missing translation id: \" + stringId;\n\t}\n\n\tif (_validate_translation_)\n\t{\n\t\tvar regex = \/\\[\\[\\[(\\d+)\\]\\]\\]\/g;\n\t\tvar placeholders = [];\n\t\tvar match;\n\t\twhile (match = regex.exec(stringValue)) {\n\t\t\tplaceholders.push(match[1]);\n\t\t}\n\n\t\tfor (var n = 0; n < placeholders.length; ++n) {\n\t\t\tif (placeholders[n] < 1 || placeholders[n] >= arguments.length) {\n\t\t\t\tthrow \"translation id: \" + stringId + \" has unmatched placeholder \" + placeholders[n];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 1; i < arguments.length; ++i) {\n\t\tstringValue = stringValue.replace( \"[[[\" + i + \"]]]\", arguments[i]);\n\t}\n\treturn stringValue;\n};\n\nfunction deepFreeze(obj)\n{\n\tObject.freeze(obj);\n\tObject.getOwnPropertyNames(obj).forEach(function (prop)\t{\n\t\tif (obj.hasOwnProperty(prop) && obj[prop] !== null\n\t\t&& (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n\t\t&& !Object.isFrozen(obj[prop])) {\n\t\t\tdeepFreeze(obj[prop]);\n\t\t}\n\t});\n\treturn obj;\n};\n\nfunction getHours(date){\n\treturn parseInt(date.substring(11,13));\n}\n\nfunction getMinutes(date){\n\treturn parseInt(date.substring(14,16));\n}\n\nfunction getTimeStr(date){\n\treturn date.substring(11,16);\n}\n\nfunction formatAMPM(d) {\n\t\n\tif (context.userPreferences.is24HourFormat){\n\t\treturn getTimeStr(d);\n\t}\n\tvar hours = getHours(d); \n\tvar minutes = getMinutes(d); \n\tvar ampm = hours >= 12 ? 'PM' : 'AM'; \n\thours = hours % 12; hours = hours ? hours : 12; \/\/ the hour '0' should be '12' \n\tminutes = minutes < 10 ? '0'+minutes : minutes; \n\tvar strTime = hours + ':' + minutes + ' ' + ampm; \n\treturn strTime; \n};\n\nfunction compareTime (d, str) {\n  var hours = getHours(d);\n  var minutes = getMinutes(d);\n  var target = str.split(\":\");\n  \n  var small = 0;\n  if  (hours < target[0]) {small = 1 }\n  else if (minutes < target[1]){small = 1}\n  else {small= -1};\n  \n  return small;\n};\n",
	"productId": "632d8d74-3751-48aa-a0c1-f72535d71baf",
	"productName": "ProfilesSimpleConditionQ3",
	"root": {
		"features": [
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.gender.negative",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "0118dbc0-4a91-4c18-a239-fbc9b55bed98"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.gender.positive",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "53944036-135a-4b21-996e-58fcca8b2bcb"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.acceptedTerms",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "8e9ea817-7db7-49a3-a637-6a9216aeda04"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.firstName",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "08c65de4-d90b-4745-bdf8-efe973a6ff67"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.firstName.lowcase",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "bb7a9b66-ba49-4260-a495-605b2c77c67f"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.firstName.toLowerCase",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "31132c31-d9e7-45d9-9e79-ee7d92f5c711"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.ageRange",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "7781ca87-8728-4bf6-8191-4257073e66bb"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.preferences.language",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "b3b4057a-ab75-48a5-ac6e-1690f13c3a6c"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.preferences.locale",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "d8ce6816-e331-423d-9665-976194b327e7"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.settings.rwi",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "b5176d37-5320-40a4-894f-33fa492bbb24"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.locations.doc.address",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "ee4ccf31-ee17-4e7e-979c-30470ef1aad6"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.locations.doc.tag",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "580d0b15-eedd-420b-8144-200561017535"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.locations.doc.coordinate",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "c5cb16e8-1628-440b-8567-b849a0ddb2c7"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.locations.doc.loc.startsWith",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "55407eaf-7845-4669-9c76-4d34e289490f"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.endpoints.status",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "f8c15500-d93c-4b36-bd98-1c5964055d45"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.locations.length",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "5d1ce26d-da48-4b1d-b5ec-7422e6aee56e"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.userId",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "8a0345b2-6a16-47bc-8408-109629125ed0"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.roles",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "0f8ff98f-3388-4566-bac9-cf8bc8d0deaa"
			},
			{
				"defaultConfiguration": null,
				"defaultIfAirlockSystemIsDown": false,
				"features": [
				],
				"name": "context.profile.demographics.email",
				"namespace": "psc",
				"noCachedResults": false,
				"type": "FEATURE",
				"uniqueId": "5622cc5c-c9f1-4c0d-af38-2fb43dcc06df"
			}
		],
		"type": "ROOT",
		"uniqueId": "7b32929a-edf8-47c5-b7e7-2fc3daaab1fc"
	},
	"s3Path": "https:\/\/airlockdev.s3-eu-west-1.amazonaws.com\/TEST2",
	"seasonId": "4b715264-0741-42fa-9258-e13c835e30ec",
	"supportedLanguages": [
		"en"
	],
	"version": "V2"
}